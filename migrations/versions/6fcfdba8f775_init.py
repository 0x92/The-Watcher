"""init

Revision ID: 6fcfdba8f775
Revises: 
Create Date: 2025-09-13 23:03:13.337901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6fcfdba8f775'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('rule_yaml', sa.Text(), nullable=False),
    sa.Column('last_eval_at', sa.DateTime(), nullable=True),
    sa.Column('notify_json', sa.JSON(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value_json', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('endpoint', sa.Text(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('interval_sec', sa.Integer(), nullable=False),
    sa.Column('auth_json', sa.JSON(), nullable=True),
    sa.Column('filters_json', sa.JSON(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_id', sa.Integer(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(), nullable=False),
    sa.Column('payload_json', sa.JSON(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('lang', sa.String(length=8), nullable=True),
    sa.Column('dedupe_hash', sa.String(length=64), nullable=True),
    sa.Column('raw_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index('ix_item_dedupe_hash', 'items', ['dedupe_hash'], unique=False)
    op.create_index('ix_item_published_at', 'items', ['published_at'], unique=False)
    op.create_table('gematria',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('scheme', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('normalized_title', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_id')
    )
    op.create_index('ix_gematria_scheme', 'gematria', ['scheme'], unique=False)
    op.create_index('ix_gematria_value', 'gematria', ['value'], unique=False)
    op.create_table('item_tags',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'tag_id'),
    sa.UniqueConstraint('item_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item_tags')
    op.drop_index('ix_gematria_value', table_name='gematria')
    op.drop_index('ix_gematria_scheme', table_name='gematria')
    op.drop_table('gematria')
    op.drop_index('ix_item_published_at', table_name='items')
    op.drop_index('ix_item_dedupe_hash', table_name='items')
    op.drop_table('items')
    op.drop_table('events')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('sources')
    op.drop_table('settings')
    op.drop_table('alerts')
    # ### end Alembic commands ###
